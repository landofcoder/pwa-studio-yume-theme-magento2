// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders form errors 1`] = `
Array [
  <div
    className="root"
  >
    <span
      className="errorMessage"
    >
      Form Error
    </span>
  </div>,
  <form
    onKeyDown={[Function]}
    onReset={[Function]}
    onSubmit={[Function]}
  >
    <Options
      classes={
        Object {
          "root": "optionRoot",
        }
      }
      onSelectionChange={[MockFunction]}
      options={
        Array [
          "option3",
          "option4",
        ]
      }
      selectedValues={
        Array [
          "option1",
          "option2",
        ]
      }
    />
    <h3
      className="quantityLabel"
    >
      Quantity
    </h3>
    <div
      className="root"
    >
      <label
        className="label"
        htmlFor="123"
      />
      <button
        aria-label="Decrease Quantity"
        className="button_decrement"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <span
          className="root"
        >
          <svg
            className="icon"
            fill="none"
            height={22}
            stroke="currentColor"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="2"
            viewBox="0 0 24 24"
            width={22}
            xmlns="http://www.w3.org/2000/svg"
          >
            <line
              x1="5"
              x2="19"
              y1="12"
              y2="12"
            />
          </svg>
        </span>
      </button>
      <span
        className="root"
        style={
          Object {
            "--iconsAfter": 0,
            "--iconsBefore": 0,
          }
        }
      >
        <span
          className="input"
        >
          <input
            aria-label="Item Quantity"
            className="input"
            id="123"
            inputMode="numeric"
            min={0}
            name="quantity"
            onBlur={[Function]}
            onChange={[Function]}
            pattern="[0-9]*"
            value={5}
          />
        </span>
        <span
          className="before"
        />
        <span
          className="after"
        />
      </span>
      <p
        className="root"
      />
      <button
        aria-label="Increase Quantity"
        className="button_increment"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <span
          className="root"
        >
          <svg
            className="icon"
            fill="none"
            height={20}
            stroke="currentColor"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="2"
            viewBox="0 0 24 24"
            width={20}
            xmlns="http://www.w3.org/2000/svg"
          >
            <line
              x1="12"
              x2="12"
              y1="5"
              y2="19"
            />
            <line
              x1="5"
              x2="19"
              y1="12"
              y2="12"
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      className="submit"
    >
      <button
        className="root_highPriority"
        disabled={false}
        type="submit"
      >
        <span
          className="content"
        >
          Update
        </span>
      </button>
    </div>
  </form>,
]
`;

exports[`renders form with data 1`] = `
<form
  onKeyDown={[Function]}
  onReset={[Function]}
  onSubmit={[Function]}
>
  <Options
    classes={
      Object {
        "root": "optionRoot",
      }
    }
    onSelectionChange={[MockFunction]}
    options={
      Array [
        "option3",
        "option4",
      ]
    }
    selectedValues={
      Array [
        "option1",
        "option2",
      ]
    }
  />
  <h3
    className="quantityLabel"
  >
    Quantity
  </h3>
  <div
    className="root"
  >
    <label
      className="label"
      htmlFor="123"
    />
    <button
      aria-label="Decrease Quantity"
      className="button_decrement"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      <span
        className="root"
      >
        <svg
          className="icon"
          fill="none"
          height={22}
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="2"
          viewBox="0 0 24 24"
          width={22}
          xmlns="http://www.w3.org/2000/svg"
        >
          <line
            x1="5"
            x2="19"
            y1="12"
            y2="12"
          />
        </svg>
      </span>
    </button>
    <span
      className="root"
      style={
        Object {
          "--iconsAfter": 0,
          "--iconsBefore": 0,
        }
      }
    >
      <span
        className="input"
      >
        <input
          aria-label="Item Quantity"
          className="input"
          id="123"
          inputMode="numeric"
          min={0}
          name="quantity"
          onBlur={[Function]}
          onChange={[Function]}
          pattern="[0-9]*"
          value={5}
        />
      </span>
      <span
        className="before"
      />
      <span
        className="after"
      />
    </span>
    <p
      className="root"
    />
    <button
      aria-label="Increase Quantity"
      className="button_increment"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      <span
        className="root"
      >
        <svg
          className="icon"
          fill="none"
          height={20}
          stroke="currentColor"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="2"
          viewBox="0 0 24 24"
          width={20}
          xmlns="http://www.w3.org/2000/svg"
        >
          <line
            x1="12"
            x2="12"
            y1="5"
            y2="19"
          />
          <line
            x1="5"
            x2="19"
            y1="12"
            y2="12"
          />
        </svg>
      </span>
    </button>
  </div>
  <div
    className="submit"
  >
    <button
      className="root_highPriority"
      disabled={false}
      type="submit"
    >
      <span
        className="content"
      >
        Update
      </span>
    </button>
  </div>
</form>
`;

exports[`renders loading indicator while options are being fetched 1`] = `
<LoadingIndicator
  classes={
    Object {
      "root": "loading",
    }
  }
>
  Fetching Product Options...
</LoadingIndicator>
`;
